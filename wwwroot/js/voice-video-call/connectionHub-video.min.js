function timerDisplayFun(){var r=new Date,n=r-dt1,t=Math.floor(n/1e3%60),i=Math.floor(n/6e4);document.querySelector(".recording-timer-display label").innerHTML=(i<10?"0":"")+i.toString()+":"+(t<10?"0":"")+t.toString();videoaudiotimer=setTimeout(timerDisplayFun,1e3)}function appendNewContactById(n){$.post("/Home/GetAccounts",{searchKey:n},function(n){var t;if(n.length!=0)for($(".no-mess-contact").hide(),t=0;t<n.length;t++){var i=n[t].contactName?n[t].contactName:n[t].userName,r=n[t].profilePic?"/ProfilePics/thumbnails/"+n[t].profilePic:"/img/person-icon.png",u=`<div class="mess row contact new-def-mess def-mess" minid="`+n[t].minid+`" data-id="`+n[t].userId+`">
                                <div class="col-12 d-inline px-3">
                                    <div class="float-start">
                                        <img src="`+r+`" class="img-pro online">
                                    </div>
                                    <div class="float-start text-start px-2">
                                        <div class="pro">
                                                <label class="name">`+i+`</label>
                                                <label class="company">`+n[t].companyTitle+`</label>
                                                <label class="role">`+n[t].position+`</label>
                                        </div>
                                    </div>
                                    <div class="float-end chat-num">
                                        <label class="badge text-bg-success">1</label>
                                    </div>
                                </div>
                            </div>`;$(".contacts").children().first().before(u);$(".new-def-mess").on("click",function(){var n,t;$(".contact").removeClass("new-def-mess");$(".contact").removeClass("active");$(this).addClass("active");n=$(this).data("id");$(".loading").show();t=$(this).data("id");$.post("/Home/GetContactMessage",{minId:"0",contactId:n},function(n){$(".loading").hide();n==null||n.length==0?SetEmptyMessage():SetResultOfMessage(n)})});$(".new-def-mess").addClass("def-mess").removeClass("new-def-mess")}})}function sendBySignalR(n,t){this.wsconn.invoke("SendMessage",n,t).catch(n=>console.log(n))}function sendBySignalRForDel(n,t){this.wsconn.invoke("SendMessage",n,"delmess;,;"+t).catch(function(n){return console.log(n.toString())})}function SendNotConnectAlert(n){sendNotConnectMess==!1&&(sendNotConnectMess=!0,alertify.confirm(n,function(n){n&&(window.location.reload(),window.location.reload());sendNotConnectMess=!1}))}var sendNotConnectMess=!1,videoaudiotimer,dt1;const isDebugging=!0;var hubUrl="/ConnectionHub",isVideoCall=!1,wsconn=(new signalR.HubConnectionBuilder).withUrl(hubUrl,signalR.HttpTransportType.WebSockets).withAutomaticReconnect({nextRetryDelayInMilliseconds:()=>(confirm("Chat not live now(signalr is disconnected. For refresh page touch ok. For auto reconnect touch cancel.)")&&window.location.reload(),console.log("retry connect to connecttionHub with 3000 ms delay"),3e3)}).configureLogging(signalR.LogLevel.None).build(),peerConnectionConfig={iceServers:[{url:"stun:stun.l.google.com:19302"}]};$(document).ready(function(){initializeSignalR();$(document).on("click",".user",function(){$("#call-status-lbl").html("calling user...");console.log("calling user... ");var n=$(this).attr("UserId");if($("body").attr("data-mode")!=="idle"){alertify.error("Sorry, you are already in a call.  Conferencing is not yet implemented.");return}n!=myUserId?(wsconn.invoke("callUser",n),dt1=new Date,setTimeout(timerDisplayFun,1e3),$("body").attr("data-mode","calling"),$("#callstatus").text("Calling...")):(alertify.error("Ah, nope.  Can't call yourself."),clearInterval(videoaudiotimer))});$(".hangup").click(function(){beepring.pause();beepring.currentTime=0;beepring.volume=0;console.log("hangup....");clearInterval(videoaudiotimer);$("body").attr("data-mode")!=="idle"&&(wsconn.invoke("hangUp"),closeAllConnections(),$("#VideoCallModal").modal("hide"),$("body").attr("data-mode","idle"),$("#callstatus").text("Idle"))})});var webrtcConstraints={audio:!0,video:{mandatory:{minWidth:320,maxWidth:320,minHeight:240,maxHeight:240,minFrameRate:1,maxFrameRate:5},optional:[]}},webrtcVoiceConstraints={audio:!0,video:!1},streamInfo={applicationName:WOWZA_APPLICATION_NAME,streamName:WOWZA_STREAM_NAME,sessionId:WOWZA_SESSION_ID_EMPTY};const localVideo=document.getElementById("localVideo"),remoteVideo=document.getElementById("remoteVideo"),partnerAudio=document.querySelector(".audio.partner");var WOWZA_STREAM_NAME=null,connections={},localStream=null;remoteStream=null;attachMediaStream=n=>{console.log("OnPage: called attachMediaStream"),remoteStream=n.stream,dt1=new Date,videoaudiotimer=setTimeout(timerDisplayFun,1e3),isVideoCall?remoteVideo.srcObject=n.stream:partnerAudio.srcObject=n.stream};const receivedCandidateSignal=(n,t,i)=>{console.log("WebRTC: adding full candidate"),n.addIceCandidate(new RTCIceCandidate(i),()=>console.log("WebRTC: added candidate successfully"),()=>console.log("WebRTC: cannot add candidate"))},receivedSdpSignal=(n,t,i)=>{console.log("connection: ",n),console.log("sdp",i),console.log("WebRTC: called receivedSdpSignal"),console.log("WebRTC: processing sdp signal"),n.setRemoteDescription(new RTCSessionDescription(i),()=>{console.log("WebRTC: set Remote Description"),n.remoteDescription.type=="offer"?(console.log("WebRTC: remote Description type offer"),console.log(localStream),n.addStream(localStream),console.log("WebRTC: added stream"),n.createAnswer().then(i=>{console.log("WebRTC: create Answer..."),n.setLocalDescription(i,()=>{console.log("WebRTC: set Local Description..."),console.log("connection.localDescription: ",n.localDescription),sendHubSignal(JSON.stringify({sdp:n.localDescription}),t)},errorHandler)},errorHandler)):n.remoteDescription.type=="answer"&&console.log("WebRTC: remote Description type answer")},errorHandler)},newSignal=(n,t)=>{console.log("WebRTC: called newSignal");var i=JSON.parse(t),r=getConnection(n);console.log("connection: ",r);i.sdp?(console.log("WebRTC: sdp signal"),receivedSdpSignal(r,n,i.sdp)):i.candidate?(console.log("WebRTC: candidate signal"),receivedCandidateSignal(r,n,i.candidate)):(console.log("WebRTC: adding null candidate"),r.addIceCandidate(null,()=>console.log("WebRTC: added null candidate successfully"),()=>console.log("WebRTC: cannot add null candidate")))},onReadyForStream=n=>{console.log("WebRTC: called onReadyForStream"),n.addStream(localStream),console.log("WebRTC: added stream")},onStreamRemoved=()=>{console.log("WebRTC: onStreamRemoved -> Removing stream: ")},closeConnection=n=>{console.log("WebRTC: called closeConnection ");var t=connections[n];t&&(onStreamRemoved(null,null),localStream&&localStream.getTracks().forEach(function(n){n.stop()}),remoteStream&&remoteStream.getTracks().forEach(function(n){n.stop()}),$("#VideoCallModal").modal("hide"),t.close(),delete connections[n])},closeAllConnections=()=>{console.log("WebRTC: call closeAllConnections ");for(var n in connections)closeConnection(n);localStream&&localStream.getTracks().forEach(function(n){n.stop()});remoteStream&&remoteStream.getTracks().forEach(function(n){n.stop()})},getConnection=n=>(console.log("WebRTC: called getConnection"),connections[n]?(console.log("WebRTC: connections partner client exist"),connections[n]):(console.log("WebRTC: initialize new connection"),initializeConnection(n))),initiateOffer=(n,t)=>{console.log("WebRTC: called initiateoffer: ");var i=getConnection(n);i.addStream(t);console.log("WebRTC: Added local stream");i.createOffer().then(t=>{console.log("WebRTC: created Offer: "),console.log("WebRTC: Description after offer: ",t),i.setLocalDescription(t).then(()=>{console.log("WebRTC: set Local Description: "),console.log("connection before sending offer ",i),setTimeout(()=>{sendHubSignal(JSON.stringify({sdp:i.localDescription}),n)},1e3)}).catch(n=>console.error("WebRTC: Error while setting local description",n))}).catch(n=>console.error("WebRTC: Error while creating offer",n))},callbackUserMediaSuccess=n=>{console.log("WebRTC: got media stream"),localStream=n,isVideoCall&&(localVideo.srcObject=n)},initializeUserMediaVideo=()=>{console.log("WebRTC: InitializeUserMedia: "),navigator.getUserMedia(webrtcConstraints,callbackUserMediaSuccess,errorHandler)},initializeUserMediaVoice=()=>{console.log("WebRTC: InitializeUserMedia: "),navigator.getUserMedia(webrtcVoiceConstraints,callbackUserMediaSuccess,errorHandler)},callbackRemoveStream=()=>{console.log("WebRTC: removing remote stream from partner window"),remoteVideo.srcObject=""},callbackAddStream=(n,t)=>{console.log("WebRTC: called callbackAddStream"),attachMediaStream(t)},callbackNegotiationNeeded=()=>{console.log("WebRTC: Negotiation needed...")},callbackIceCandidate=(n,t,i)=>{console.log("WebRTC: Ice Candidate callback"),n.candidate?(console.log("WebRTC: new ICE candidate"),sendHubSignal(JSON.stringify({candidate:n.candidate}),i)):(console.log("WebRTC: ICE candidate gathering complete"),sendHubSignal(JSON.stringify({candidate:null}),i))},initializeConnection=n=>{console.log("WebRTC: Initializing connection...");var t=new RTCPeerConnection(peerConnectionConfig);return t.onicecandidate=i=>callbackIceCandidate(i,t,n),t.onaddstream=n=>callbackAddStream(t,n),t.onremovestream=n=>callbackRemoveStream(t,n),connections[n]=t,t};sendHubSignal=(n,t)=>{console.log("candidate",n),console.log("SignalR: called sendhubsignal "),wsconn.invoke("sendSignal",n,t).catch(errorHandler)};wsconn.onclose(n=>{n?(console.log("SignalR: closed with error."),console.log(n)):console.log("Disconnected"),SendNotConnectAlert("Chat not live now(signalr is disconnected.For refresh page touch ok.)")});wsconn.on("updateUserList",n=>{ul=n,$("#usersLength").text(n.length),$("#usersdata li.user").remove(),$(".contact img").removeClass("online"),$.each(n,function(t){var i="",r="";n[t].username===$("#upperUsername").text()&&(myConnectionId=n[t].connectionId,i="icon-employee",r="Me");i||(i=n[t].inCall?"icon-smartphone-1":"icon-smartphone-1");r=n[t].inCall?"In Call":"Available";$('.contact[data-id="'+n[t].userId+'"] img').addClass("online")})});wsconn.on("callAccepted",n=>{console.log("SignalR: call accepted from: "+JSON.stringify(n)+".  Initiating WebRTC call and offering my stream up..."),$("#call-status-lbl").html("Call accepted..."),beepring.pause(),beepring.currentTime=0,beepring.volume=0,dt1=new Date,videoaudiotimer=setTimeout(timerDisplayFun,1e3),setTimeout(function(){$("#call-status-lbl").html("Connected")},3e3),initiateOffer(n.connectionId,localStream),$("body").attr("data-mode","incall"),$("#ChatPmModal").modal("hide"),$("#callstatus").text("In Call")});wsconn.on("callDeclined",(n,t)=>{console.log("SignalR: call declined from: "+n.connectionId),$("#call-status-lbl").html("Call Declined!"),beepring.pause(),beepring.currentTime=0,beepring.volume=0,alertify.error(t),setTimeout(function(){$(".hangup").trigger("click")},3e3)});wsconn.on("incomingCall",(n,t)=>{if($("#call-status-lbl").html("Call started"),console.log("SignalR: incoming"+(isVideoCall?" video ":" voice ")+"call from: "+JSON.stringify(n)),isVideoCall=t,$(".partner")[0].style.display="none",isVideoCall==!1?(localVideo.style.display="none",remoteVideo.style.display="none",$(".partner")[0].style.display="",$("#VideoCallModalLabel").html("Voice Call")):(localVideo.style.display="",remoteVideo.style.display="",$("#VideoCallModalLabel").html("Video Call")),isVideoCall)IsCameraPermission==!1&&(IsCameraPermission=JSBridge.getVideoPermission());else try{IsMicrophonePermission==!1&&JSBridge.getAudioPermission()}catch{}alertify.confirm(n.username+" is calling.  Do you want to"+(isVideoCall?" video ":" voice ")+"chat?",function(t){t?(isVideoCall==!1?initializeUserMediaVoice():initializeUserMediaVideo(),$("#VideoCallModal").modal("show"),wsconn.invoke("AnswerCall",!0,n).catch(n=>console.log(n)),$("body").attr("data-mode","incall"),$("#callstatus").text("In Call")):wsconn.invoke("AnswerCall",!1,n).catch(n=>console.log(n))})});wsconn.on("receiveSignal",(n,t)=>{newSignal(n.connectionId,t)});wsconn.on("callEnded",(n,t)=>{$("#call-status-lbl").html("Call ended"),console.log("SignalR: call with "+n.connectionId+" has ended: "+t),alertify.error(t),beepring.pause(),beepring.currentTime=0,beepring.volume=0,closeConnection(n.connectionId),setTimeout(function(){$(".hangup").trigger("click")},3e3),$("#callstatus").text("Idle")});wsconn.on("ReceiveMessage",n=>{var u,a,s,c,e,i,o,t;if(notifring.play(),u=n.split(";;;")[1],n.startsWith("delmess;,;")){$(".contact[data-id="+u+"]").hasClass("active")&&(a=n.replace("delmess;,;","").split(";;;")[0],$(".messages li[data-id="+a+"]").remove());return}if(n.startsWith("customNotif:")){try{var e=n.split(";;;")[3],v=n.split(";;;")[2],y=n.split(";;;")[4];JSBridge.setCustomNotification(v,y,parseInt(e))}catch{}return}if(s=$(".contact[data-id="+u+"] .text-bg-success").html(),s==undefined){appendNewContactById(u);return}s?(c=parseInt(s.replace(" ","").replace("(","").replace(")","")),c++,$(".contact[data-id="+u+"] .text-bg-success").html(c)):$(".contact[data-id="+u+"] .text-bg-success").html("1");try{e=n.split(";;;")[3];JSBridge.setNotification("you have new message",e)}catch{}if($(".contact[data-id="+u+"]").hasClass("active")){var l=n.split(";;;")[0],r=n.split(";;;")[2],e=n.split(";;;")[3],h=n.split(";;;")[4],f="";if(l=="isfile")for(i=r.split(",;,")[0].split(";"),o="",r.split(",;,").length>1&&(o=r.split(",;,")[1]),t=0;t<i.length;t++)f+=`<li class="from-other" data-id="`+e+`" >`,o&&(f+=`<div class="card" data-id="`+(h?h:"")+`" >
                      <div class="card-header">`+o+`</div>`),f+=IsImage(i[t])?`<label><a data-url="/uploads/`+i[t]+`" class="img-tag"><div><img  class="fupload" src="/uploads/thumbnails/`+i[t]+`" /></div><div>`+i[t]+`</div></a></label>`:IsAudio(i[t])?`<label><div><audio controls src="/uploads/`+i[t]+`" ></audio></div><div> `+i[t]+`</div></label>`:IsVideo(i[t])?`<label><div><video controls  ><source src="/uploads/`+i[t]+`" ></video></div><div> `+i[t]+`</div></label>`:IsPdfOrDoc(i[t])?`<label><a href="/uploads/`+i[t]+`" target="_blank" ><div><img src="/uploads/thumbnails/`+i[t].substring(0,i[t].lastIndexOf("."))+`.jpg" /></div><div>`+i[t]+`</div></a></label>`:`<label><a href="/uploads/`+i[t]+`" target="_blank" ><div><img src="/img/file-icon.png" /></div><div>`+i[t]+`</div></a></label>`,o&&(f+=`</div>`),f+=`</li><li  class="from-other"><div class="date">`+getNiceDateTimeFormat(l)+`</div></li>`;else f+=`<li class="from-other"  data-id="`+e+`" >`+(r.indexOf(",;,")>=0?`<div class="card" data-id="`+(h?h:"")+`" >
                      <div class="card-header">`+r.split(",;,")[0]+`</div><label `+checkRtlOfText(r.split(",;,")[1])+`>`+textToWrite(r.split(",;,")[1])+`</label></div>`:`<label`+checkRtlOfText(r)+`>`+textToWrite(r)+`</label>`)+`</li><li  class="from-other"><div class="date">`+getNiceDateTimeFormat(l)+`</div></li>`;$("#lastchat").before(f);setTimeout(function(){$(".chat-pm ul").scrollTop($(".chat-pm ul")[0].scrollHeight)},500);$(".img-tag").unbind("click");$(".img-tag").on("click",function(){var n=$(this).data("url");loadImageModal(n)});$.post("/Home/SeenMessege",{contactId:u},function(){});allDropDownButtonProcess()}});const initializeSignalR=()=>{wsconn.start().then(()=>{console.log("SignalR: Connected"),setUsername(myusername,myUserId)}).catch(n=>{SendNotConnectAlert("Chat not live now(signalr is disconnected.For refresh page touch ok.)"),console.log(n)})},setUsername=(n,t)=>{consoleLogger("SingnalR: setting username..."),wsconn.invoke("Join",n,t).catch(n=>{consoleLogger(n),alertify.alert("<h4>Failed SignalR Connection<\/h4> We were not able to connect you to the signaling server.<br/><br/>Error: "+JSON.stringify(n))}),$("#upperUsername").text(n),$("div.username").text(n)},generateRandomUsername=()=>{consoleLogger("SignalR: Generating random username...");let n="User "+Math.floor(Math.random()*1e4+1);alertify.success("You really need a username, so we will call you... "+n);setUsername(n)},errorHandler=n=>{n.message?alertify.alert("<h4>Error Occurred<\/h4><\/br>Error Info: "+JSON.stringify(n.message)):alertify.alert("<h4>Error Occurred<\/h4><\/br>Error Info: "+JSON.stringify(n)),consoleLogger(n)},consoleLogger=n=>{isDebugging&&console.log(n)};